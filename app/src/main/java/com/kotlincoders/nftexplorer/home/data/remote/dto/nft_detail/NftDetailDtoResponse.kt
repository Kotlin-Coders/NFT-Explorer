package com.kotlincoders.nftexplorer.home.data.remote.dto.nft_detail

import com.kotlincoders.nftexplorer.home.domain.model.NftDetails

data class NftDetailDtoResponse(
    val address: String,
    val averagePrice: Double,
    val bannerImg: String,
    val blockchain: String,
    val count: Int,
    val createdDate: String,
    val creatorFee: Double,
    val description: String,
    val floorPriceChange24h: Double,
    val floorPriceChange7d: Double,
    val floorPriceMc: Double,
    val floorPriceUsd: Double,
    val img: String,
    val listedCount: Int,
    val mainCurrencyId: String,
    val marketcapChange24h: Double,
    val marketcapChange7d: Double,
    val marketcapMc: Double,
    val marketcapUsd: Double,
    val name: String,
    val oneDayAveragePrice: Double,
    val oneDayChange: Double,
    val oneDaySales: Int,
    val ownersCount: Int,
    val ownersCountChange24h: Int,
    val ownersCountChange7d: Double,
    val rank: Int,
    val rankAll: Int,
    val relevantUrls: List<RelevantUrl>,
    val salesInProfit: Int,
    val salesInProfitChange24h: Int,
    val salesInProfitChange7d: Int,
    val sevenDayAveragePrice: Double,
    val sevenDayChange: Double,
    val sevenDaySales: Int,
    val show: Boolean,
    val slug: String,
    val slugCs: String,
    val source: String,
    val thirtyDayAveragePrice: Double,
    val thirtyDayChange: Double,
    val thirtyDaySales: Int,
    val thirtyDayVolume: Double,
    val totalSales: Int,
    val totalSupply: Int,
    val totalVolume: Double,
    val transactionsUpdateDate: String,
    val verified: Boolean,
    val volume: Double,
    val volumeChange24h: Double,
    val volumeChange7d: Double,
    val volumeMc24h: Double,
    val volumeMc7d: Double,
    val volumeUsd24h: Double,
    val volumeUsd7d: Double
)

fun NftDetailDtoResponse.toNftDetail(): NftDetails {
    return NftDetails(
        address = this.address,
        bannerImg = this.bannerImg,
        img = this.img,
        name = this.name,
        creatorFee = this.creatorFee,
        totalSupply = this.totalSupply,
        floorPriceMc = this.floorPriceMc,
        volume = this.volume,
        blockchain = this.blockchain
    )
}